import java.util.regex.Matcher
import java.util.regex.Pattern

def readFile = { envFile ->
    def env = [:]
    println("Reading env from: $envFile")
    try {
        new File("$project.rootDir/../$envFile").eachLine { line ->
            def (key, val) = line.tokenize('=')
            if (key && val && key.substring(0, 1) != "#") {
                env.put(key, val)
            }
        }
    } catch (Exception ex) {
        println("**************************")
        println("*** Missing .env file ****")
        println("**************************")
    }
    return env;
}


def readDotEnv = {

    project.ext.set("env", readFile("thejump.env"))
    project.ext.set("envlive", readFile("thejumplive.env"))
}

readDotEnv()


// Sets the constants at project.env when using only one config file
// Example: project.env.get("APP_ID") in build.gradle
if (project.ext.has("env")) {
    android {
        defaultConfig {
            project.ext.get("env").each { k, v ->
                def escaped = v.replaceAll("%","\\\\u0025")
                buildConfigField "String", k, "\"$v\""
                resValue "string", k, "\"$escaped\""
            }
            project.ext.get("envlive").each { k, v ->
                def escaped = v.replaceAll("%","\\\\u0025")
                buildConfigField "String","live" + k , "\"$v\""
                resValue "string", k, "\"$escaped\""
            }
        }
    }
}
